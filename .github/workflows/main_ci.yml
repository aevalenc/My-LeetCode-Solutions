# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a multiple jobs
  bazel-build:
    if: contains(github.event.pull_request.labels.*.name, 'check')
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: bazelbuild/setup-bazelisk@v1
      - run: bazel build --copt='-std=c++14' //...

  bazel-test:
    if: contains(github.event.pull_request.labels.*.name, 'check')

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: bazelbuild/setup-bazelisk@v1
      - run: bazel test --copt='-std=c++14' --cache_test_results=no --test_output=all //...

  cpp-lint:
    if: contains(github.event.pull_request.labels.*.name, 'check')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: cpp-linter/cpp-linter-action@v1
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file

      - name: Fail fast?!
        if: steps.linter.outputs.checks-failed > 0
        # run: |
        # echo "Some files failed the linting checks!"
        # for actual deployment
        run: exit 1
